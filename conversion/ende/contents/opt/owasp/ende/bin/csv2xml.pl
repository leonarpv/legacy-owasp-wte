#! /usr/bin/perl -w
#?
#? NAME
#?      $0 - XML generator
#?
#? SYNOPSIS
#?      $0 <file>
#?
#? DESCRIPTION
#?      Convert tab-separated table to XML data.
#?
#?      For format of table see sqlPattern.txt.
#?
#? SEE ALSO
#?      sqlPattern.txt
#?
#? VERSION
#?      @(#) csv2xml.pl 3.2 11/06/23 17:53:29
#?
#? AUTHOR
#?      17-feb-08 Achim Hoffmann, mailto: EnDe (at) my (dash) stp (dot) net
#?
# -----------------------------------------------------------------------------

my ($label, $name, $code, $desc, $browser) = '';
my $cmt = 0;

open( FID, "<", $ARGV[0] ) || die "** ERROR: $!";

print <<EoXML;
<?xml version="1.0"?>
<!-- generated by csv2xml.pl 3.2 from $ARGV[0] -->
<xss>
EoXML

while (<FID>) {
	m/^#\?\!/              && do { print "\n<!--\n" if ($cmt==0); $cmt = 1; print; next; };
	m/^[ \t]*#/            && next;    # skip comments
	m/^[ \t]*$/            && do { print " -->\n\n" if ($cmt==1); $cmt = 0; next; }; # skip empty lines
	m/^[ \t]*LABEL\s+(.*)/ && do { $label = $1; next; };
	($browser, $name, $desc, $code) = split("\t", $_);
	chomp($code);
	$code =~ s:&:&amp;:g;
	$code =~ s:<:&lt;:g;
	$code =~ s:>:&gt;:g;
	$name =  $code if ($name eq '*');
	$name =~ s:^(.{1,35}).*:$1:;
	$desc =  $browser . ': ' . $code if ($desc eq '*');
	print <<EoXML;
	<attack>
		<label>$label</label>
		<name>$name</name>
		<code>$code</code>
		<desc>$desc</desc>
		<browser>$browser</browser>
	</attack>
EoXML
}
print "</xss>\n";
close(FID);

__END__
